snippet redirect "adds redirection to a request" b
[Options]
location: true
HTTP 200
endsnippet

snippet header "displays a comment with a header example" b
Authorization: "Bearer token"
endsnippet

snippet queryParams "displays a comment with a query params example" b
[QueryStringParams]
id: 42
order_by: date
endsnippet

snippet cookies "displays a comment with a cookies example" b
[Cookies]
session_id: ASDFASDF
endsnippet

snippet formParams "displays a comment with a form example" b
[FormParams]
email: jane@doe.com
number: 1234567890
endsnippet

snippet multiForm "displays a comment with a multipart form example" b
[MultipartFormData]
name: jane doe
contacts: file,contacts.csv; text/csv # content-type is optional
endsnippet

snippet file "displays a comment with a file post example" b
POST https://www.example.org
[MultipartFormData]
file: file,data.csv;
endsnippet

snippet options "displays options available" b
[Options]
cacert: /etc/cert.pem   # a custom certificate file
compressed: true        # request a compressed response
insecure: true          # allows insecure SSL connections and transfers
location: true          # follow redirection for this request
max-redirs: 10          # maximum number of redirections
path-as-is: true        # tell curl to not handle sequences of /../ or /./ in the given URL path
variable: country=Italy # define variable country
variable: planet=Earth  # define variable planet
verbose: true           # allow verbose output
very-verbose: true      # allow more verbose output
endsnippet

snippet captures "displays a capture example" b
GET https://www.example.org
HTTP 200
[Captures]
csrf_token: xpath "normalize-space(//meta[@name='_csrf_token']/@content)"
session-id: cookie "LSID"
next_url: header "Location"
resp_body: body

# you can use captured values in subsequent requests
POST https://www.example.org/login
X-CSRF-TOKEN: {{csrf_token}}
HTTP 302
endsnippet

snippet assert_code "asserts a status code" b
HTTP 200
endsnippet

snippet assert_status "asserts a status code" b
[Asserts]
status > 400
endsnippet

snippet assert_header "asserts a header" b
[Asserts]
header "Content-Type" contains "utf-8"
endsnippet

snippet assert_cookie "asserts a cookie" b
[Asserts]
cookie "LSID" == "DQAAAKEaem_vYg"
endsnippet

snippet assert_body "asserts body" b
[Asserts]
body contains "你好世界"
endsnippet

snippet assert_count "asserts json count" b
[Asserts]
jsonpath "$.cats" count == 49
endsnippet

snippet assert_equal "asserts json equal" b
[Asserts]
jsonpath "$.cats[0].name" == "Felix"
jsonpath "$.cats[0].lives" == 9
endsnippet

snippet assert_empty "asserts json empty" b
[Asserts]
jsonpath "$.cats[0].pet" isEmpty
endsnippet

snippet assert_collection "asserts json collection" b
[Asserts]
jsonpath "$.cats[0].pet" isCollection
endsnippet

snippet assert_boolean "asserts json boolean" b
[Asserts]
jsonpath "$.cats[0].pet" isBoolean
jsonpath "$.cats[0].pet" == true
endsnippet

snippet assert_date "asserts json date" b
[Asserts]
jsonpath "$.cats[0].pet" isDate
endsnippet

snippet assert_float "asserts json float" b
[Asserts]
jsonpath "$.cats[0].pet" isFloat
endsnippet

snippet assert_integer "asserts json integer" b
[Asserts]
jsonpath "$.cats[0].pet" isInteger
endsnippet

snippet assert_string "asserts json string" b
[Asserts]
jsonpath "$.cats[0].pet" isString
endsnippet

snippet assert_exists "asserts json exists" b
[Asserts]
jsonpath "$.cats[0].pet" exists
endsnippet

snippet assert_matches "asserts json matches" b
[Asserts]
jsonpath "$.cats[0].pet" matches /.{4}/
endsnippet

snippet assert_contains "asserts json contains" b
[Asserts]
jsonpath "$.cats[0].pet" contains "mary"
endsnippet

snippet assert_endsWith "asserts json endsWith" b
[Asserts]
jsonpath "$.cats[0].pet" endsWith "ry"
endsnippet

snippet assert_startsWith "asserts json startsWith" b
[Asserts]
jsonpath "$.cats[0].pet" startsWith "ma"
endsnippet

snippet assert_includes "asserts json includes" b
[Asserts]
jsonpath "$.cats[0].pets" includes "Mary"
jsonpath "$.cats[*].name" includes "Lucy"
endsnippet

snippet GET "GET request" b
GET http://localhost:${3000:$1}
endsnippet

snippet POST "POST request" b
POST http://localhost:${3000:$1}
endsnippet

snippet PUT "PUT request" b
PUT http://localhost:${3000:$1}
endsnippet

snippet DELETE "DELETE request" b
DELETE http://localhost:${3000:$1}
endsnippet

snippet PATCH "PATCH request" b
PATCH http://localhost:${3000:$1}
endsnippet

snippet INFO "INFO request" b
INFO http://localhost:${3000:$1}
endsnippet
