# vim: ft=tmux tw=0

# color tweaks
popup_background="terminal"

set -g @components_active_background1 yellow
set -g @components_active_background2 red
set -g @components_active_background3 blue
set -g @components_inactive_background terminal

# Cyellowits: https://github.com/ahmedelgabri/dotfiles/blob/main/config/tmux/tmux.conf
# Enable true color support, the terminal info is from the outside of tmux
# https://sunaku.github.io/tmux-24bit-color.html#usage
set -g default-command "${SHELL}"
set -g default-shell "${SHELL}"
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
# Strikethrough support https://github.com/tmux/tmux/issues/612#issuecomment-288408841
# set -as terminal-overrides ',xterm*:smxx=\E[9m'
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on
set -g history-limit 100000
# Neovim https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -sg escape-time 50
set -g focus-events on
# set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1
setw -g automatic-rename on
set -g renumber-windows on # re-number windows when one is closed
set -g set-titles on                        # set terminal title
set -g set-titles-string '#S - tmux'
set -g display-time 1500 # tmux messages are displayed for 1.5 seconds
set -g display-panes-colour gray
set -g display-panes-active-colour yellow
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
# loud or quiet?
setw -g monitor-activity on
set -g visual-activity off
set -g visual-bell off
set -g bell-action none
# set -g bell-action none
# use vim keybindings in copy mode
setw -g mode-keys vi
# mouse behavior
set -g mouse on
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind-key -n WheelDownPane select-pane -t= \; send-keys -M
# aaaaaaaa
# https://github.com/zanshin/dotfiles/blob/master/tmux/tmux.conf
# ---------------------
# Copy & Paste
# ---------------------
bind-key f display-panes -d 0
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi y send-keys -X copy-pipe 'pbcopy'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'pbcopy'

# Save entire tmux history to a file - file will be on machine where tmux is
# running
bind-key * command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

set -g clock-mode-style 12
set -g clock-mode-color yellow
bind-key t clock-mode

# ----------------------
# set some pretty colors
# ----------------------
# colorize messages in the command line
set -g message-style bg=terminal,fg=white #base02
set -g message-command-style bg=terminal,fg=blue

# ----------------------
# Panes
# -----------------------
set -g pane-border-style bg=terminal,fg=colour240
set -g pane-active-border-style bg=terminal,fg=colour240
setw -g pane-border-status top
set -g pane-border-indicators off
set -g pane-border-lines heavy
setw -g pane-border-format ' #(~/.local/scripts/shortname/shortname.sh #{pane_current_path} 100 yellow)'
set-hook -g pane-focus-in 'run-shell "~/.local/scripts/tmux/toggle_pane_borders.sh"'
run-shell "$HOME/.local/scripts/tmux/toggle_pane_borders.sh"
# ----------------------
# Status Bar
# -----------------------
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify absolute-centre

# set color for status bar

set -g status-style bg=terminal,fg=terminal
set-window-option -g window-status-separator ""
setw -g window-status-format "#[bg=#{@components_inactive_background},fg=white] #(~/.local/scripts/tmux/icons.sh #W #{pane_current_command}) #[bg=terminal]"
setw -g window-status-current-format "#[bg=#{@components_active_background1},fg=black] #(~/.local/scripts/tmux/icons.sh #W #{pane_current_command}) #[bg=terminal]"
setw -g window-status-activity-style bg=terminal,fg=colour243
setw -g window-status-bell-style bg=terminal,fg=brightyellow
setw -g window-status-current-style bg=terminal,fg=colour004

status_prefix="#[fg=white,bg=terminal] #{?client_prefix,󱐋,} "
status_battery="#(~/.local/scripts/tmux/battery.sh #{client_width} #{@components_active_background2})"
# for some reason that extra space at the end prevents the date from overlaping & makes it play nice with Nerd Fonts
# spotify="#(~/.local/scripts/tmux/spotify.sh #{client_width})"
# airpods="#[fg=white,bg=terminal]#(~/.local/scripts/tmux/airpods.sh)"
status_date_time="#(~/.local/scripts/tmux/date.sh #{client_width} #{@components_active_background1}) "
# show session name, window & pane number, date and time on left side of
# status bar
set -g status-left-length 100
set -g status-right-length 300

# set -g status-left "#[fg=colour237]#{?client_prefix,#[fg=colour012],#[fg=white]}#S #[fg=colour237] "
base_path="#(~/.local/scripts/shortname/shortname.sh #{session_path} #{client_width} #{@components_active_background3} #{session_name})"

ram_usage="#(~/.local/scripts/tmux/ram.sh #{@components_active_background1} #{client_width})"
todos_indicator="#(~/.local/scripts/tmux/todos.sh #{@components_active_background2} #{client_width})"
dots_indicator="#(~/.local/scripts/tmux/dots_state.sh #{@components_active_background2} #{client_width})"

set -g status-left "${base_path}${ram_usage}${todos_indicator}${status_prefix}"
set -g status-right "${dots_indicator}${status_date_time}${status_battery}"

# Keybindings
unbind C-b
set -g prefix C-x
bind C-x send-prefix
set -g prefix2 ¿
bind ¿ send-keys ¿
unbind '"'
unbind %
bind l select-pane -L
bind h select-pane -R
bind k select-pane -U
bind j select-pane -D
bind J swap-pane -U -Z
bind K swap-pane -D -Z
bind-key -n C-f display-popup -b heavy -S fg=black,bg=black -s bg=black -w "80%" -h "80%" -EE
# reload ~/.tmux.conf using PREFIX r
# find session
bind C-f choose-window
# Quick kill-session
bind-key C-q confirm-before 'kill-session'
# Disable confirm before killing
bind-key x kill-pane
# Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly
# right. No need to use the modifier (C-b).
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1
bind-key -n M-n next-window
bind-key -n M-p previous-window
bind-key -n M-v split-window -h
bind-key -n M-s split-window -v
bind-key C-i switch-client -l

bind-key n next-window
bind-key p previous-window
bind-key v split-window -h
bind-key s split-window -v
# use vim-like keys for splits and windows
unbind-key c
bind-key c new-window
# Resizing (mouse also works).
unbind-key Left
unbind-key Right
unbind-key Down
unbind-key Up
bind-key -r Left resize-pane -L 10
bind-key -r Right resize-pane -R 10
bind-key -r Down resize-pane -D 10
bind-key -r Up resize-pane -U 10

# popup styling
set -g popup-style bg=$popup_background,fg=yellow
set -g popup-border-style bg=terminal,fg=black
set -g popup-border-lines none

set -g message-style bg=yellow,fg=black
set -g cursor-style blinking-block
set -g main-pane-width "50%"
set -g main-pane-height "50%"

# set-option -g @fzf-goto-session-only 'true'
# set -g @fzf-goto-session 'o'
bind-key o display-popup -w "65" -h "11" -y 15 -E "$HOME/.local/scripts/shift/run.sh 65 9 all"
bind-key O display-popup -w "65" -h "11" -y 15 -E "$HOME/.local/scripts/shift/run.sh 65 9 sessions"
set-option -g detach-on-destroy off

# TASKS
bind-key "'" run-shell "$HOME/.local/scripts/tmux/command_palette.sh"
bind-key m run-shell "$HOME/.local/scripts/tmux/command_palette.sh"
bind-key i run-shell "$HOME/.local/scripts/tmux/command_palette.sh 'Spotify: search'"

# RENAME WINDOW
unbind-key ,
bind-key , run-shell "$HOME/.local/scripts/tmux/rename_window.sh"

set -g @continuum-restore 'on'
set -g @resurrect-dir "$HOME/.cache/resurrect"

# execute this
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

run '~/.tmux/plugins/tpm/tpm'
