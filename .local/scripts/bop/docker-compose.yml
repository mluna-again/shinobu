services:
  tui:
    build: .
    profiles:
      - donotstart
    environment:
      SPOTIFY_ID: ${SPOTIFY_ID}
      SPOTIFY_SECRET: ${SPOTIFY_SECRET}
      PORT: ${PORT}
      BOP_HOST: server
    command: bop tui player

  server:
    build: .
    restart: unless-stopped
    environment:
      SPOTIFY_ID: ${SPOTIFY_ID}
      SPOTIFY_SECRET: ${SPOTIFY_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${PORT}
      BOP_HOST: server
    depends_on:
      database:
        condition: service_healthy
    ports:
      - 127.0.0.1:${PORT}:8888

  database:
    image: postgres:17.2-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 10s
      retries: 15
    
volumes:
  db:
