#! /usr/bin/env bash

# Tmux pomodoro module.

GREP_EXP=".local/scripts/bin/pomo"

yellow="$(tmux display -p "#{@color_info}")"
yellow="${background:-yellow}"

red="$(tmux display -p "#{@color_error}")"
red="${background:-red}"

format_message() {
  local seconds="$1"
  time="$(tominutes "$seconds")"

  if (( seconds <= 0 )); then
    msg="$(printf '#[bg=default,fg=terminal] DONE #[bg=%s,fg=black]  ' "$red")"
    tmux set -g @pomo_current_value "$msg"
    return
  fi

  if (( seconds <= 10 )); then
    if (( seconds % 2 )); then
      msg="#[bg=default,fg=terminal] $time #[bg=$yellow,fg=black]  "
    else
      msg="#[bg=default,fg=terminal] $time #[bg=$red,fg=black]  "
    fi

    tmux set -g @pomo_current_value "$msg"
    return
  fi

  msg="#[bg=default,fg=terminal] $time #[bg=$yellow,fg=black]  "
  tmux set -g @pomo_current_value "$msg"
}

tominutes() {
  local seconds="$1"

  minutes=$(( seconds / 60 ))
  remaining=$(( seconds - ( minutes * 60 ) ))
  printf "%02d:%02d\n" "$minutes" "$remaining"
}

fromminutes() {
  local time="$1"
  minutes="$(awk -F':' '{print $1}' <<< "$time" | sed 's/^0*//g')"
  seconds="$(awk -F':' '{print $2}' <<< "$time" | sed 's/^0*//g')"

  echo "$(( ( minutes * 60 ) + seconds ))"
}

toseconds() {
  local time="$1"
  local suffix="${time: -1}"
  time="${time:0:-1}"

  case "$suffix" in
    s)
      ;;

    m)
      time=$(( time * 60 ))
      ;;

    h)
      time=$(( time * 60 * 60 ))
      ;;

    *)
      1>&2 echo invalid format
      exit 1
      ;;
  esac

  echo "$time"
}

# returns 0 if another instance is running, probably
is_running() {
  count=$(pgrep -fc "$GREP_EXP")

  (( count > 1 ))
}

start() {
  local time="$1"
  seconds=$(toseconds "$time")

  if is_running; then
    1>&2 echo "Already running."
    exit 1
  fi

  while true; do
    format_message "$seconds"
    sleep 1
    seconds=$((seconds - 1))

    if (( seconds <= 0 )); then
      format_message "$seconds"
      break
    fi
  done
}

action="$1"
case "$action" in
  start)
    start "$2"
    ;;

  pause)
    if is_running; then
      pgrep -f "$GREP_EXP" | grep -v "$$" | xargs kill
      exit
    fi

    current_time="$(tmux display -p "#{@pomo_current_value}")"
    if [ -z "$current_time" ]; then
      1>&2 echo "Not running"
      exit
    fi
    current_time_in_secs="$(fromminutes "$current_time")"
    start "${current_time_in_secs}s"
    ;;

  stop)
    tmux set -g @pomo_current_value ""
    pgrep -f "$GREP_EXP" | xargs kill
    ;;
esac
